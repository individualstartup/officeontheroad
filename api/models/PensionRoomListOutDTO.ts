/* tslint:disable */
/* eslint-disable */
/**
 * IndividualStartup API documentation
 * fileContent
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PensionRoomListPriceOutDTO } from './PensionRoomListPriceOutDTO';
import {
    PensionRoomListPriceOutDTOFromJSON,
    PensionRoomListPriceOutDTOFromJSONTyped,
    PensionRoomListPriceOutDTOToJSON,
} from './PensionRoomListPriceOutDTO';

/**
 * 
 * @export
 * @interface PensionRoomListOutDTO
 */
export interface PensionRoomListOutDTO {
    /**
     * 
     * @type {string}
     * @memberof PensionRoomListOutDTO
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PensionRoomListOutDTO
     */
    resourceGroupType: PensionRoomListOutDTOResourceGroupTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PensionRoomListOutDTO
     */
    resourceGroupId: string;
    /**
     * 
     * @type {number}
     * @memberof PensionRoomListOutDTO
     */
    numberOfBeds: number;
    /**
     * 
     * @type {number}
     * @memberof PensionRoomListOutDTO
     */
    places: number;
    /**
     * 
     * @type {number}
     * @memberof PensionRoomListOutDTO
     */
    basicPrice: number;
    /**
     * 
     * @type {string}
     * @memberof PensionRoomListOutDTO
     */
    numberOfBedsAbsoluteSale?: string;
    /**
     * 
     * @type {number}
     * @memberof PensionRoomListOutDTO
     */
    area: number;
    /**
     * 
     * @type {string}
     * @memberof PensionRoomListOutDTO
     */
    bedType: PensionRoomListOutDTOBedTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PensionRoomListOutDTO
     */
    showerType: PensionRoomListOutDTOShowerTypeEnum;
    /**
     * 
     * @type {Array<PensionRoomListPriceOutDTO>}
     * @memberof PensionRoomListOutDTO
     */
    prices?: Array<PensionRoomListPriceOutDTO>;
    /**
     * 
     * @type {number}
     * @memberof PensionRoomListOutDTO
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof PensionRoomListOutDTO
     */
    mainImage?: string;
}


/**
 * @export
 */
export const PensionRoomListOutDTOResourceGroupTypeEnum = {
    Pensionroom: 'PENSIONROOM',
    Motorhome: 'MOTORHOME',
    Restaurant: 'RESTAURANT'
} as const;
export type PensionRoomListOutDTOResourceGroupTypeEnum = typeof PensionRoomListOutDTOResourceGroupTypeEnum[keyof typeof PensionRoomListOutDTOResourceGroupTypeEnum];

/**
 * @export
 */
export const PensionRoomListOutDTOBedTypeEnum = {
    Twinbed: 'TWINBED',
    Singlebed: 'SINGLEBED'
} as const;
export type PensionRoomListOutDTOBedTypeEnum = typeof PensionRoomListOutDTOBedTypeEnum[keyof typeof PensionRoomListOutDTOBedTypeEnum];

/**
 * @export
 */
export const PensionRoomListOutDTOShowerTypeEnum = {
    Bath: 'BATH',
    Shower: 'SHOWER'
} as const;
export type PensionRoomListOutDTOShowerTypeEnum = typeof PensionRoomListOutDTOShowerTypeEnum[keyof typeof PensionRoomListOutDTOShowerTypeEnum];


/**
 * Check if a given object implements the PensionRoomListOutDTO interface.
 */
export function instanceOfPensionRoomListOutDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "resourceGroupType" in value;
    isInstance = isInstance && "resourceGroupId" in value;
    isInstance = isInstance && "numberOfBeds" in value;
    isInstance = isInstance && "places" in value;
    isInstance = isInstance && "basicPrice" in value;
    isInstance = isInstance && "area" in value;
    isInstance = isInstance && "bedType" in value;
    isInstance = isInstance && "showerType" in value;

    return isInstance;
}

export function PensionRoomListOutDTOFromJSON(json: any): PensionRoomListOutDTO {
    return PensionRoomListOutDTOFromJSONTyped(json, false);
}

export function PensionRoomListOutDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PensionRoomListOutDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'resourceGroupType': json['resourceGroupType'],
        'resourceGroupId': json['resourceGroupId'],
        'numberOfBeds': json['numberOfBeds'],
        'places': json['places'],
        'basicPrice': json['basicPrice'],
        'numberOfBedsAbsoluteSale': !exists(json, 'numberOfBedsAbsoluteSale') ? undefined : json['numberOfBedsAbsoluteSale'],
        'area': json['area'],
        'bedType': json['bedType'],
        'showerType': json['showerType'],
        'prices': !exists(json, 'prices') ? undefined : ((json['prices'] as Array<any>).map(PensionRoomListPriceOutDTOFromJSON)),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'mainImage': !exists(json, 'mainImage') ? undefined : json['mainImage'],
    };
}

export function PensionRoomListOutDTOToJSON(value?: PensionRoomListOutDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'resourceGroupType': value.resourceGroupType,
        'resourceGroupId': value.resourceGroupId,
        'numberOfBeds': value.numberOfBeds,
        'places': value.places,
        'basicPrice': value.basicPrice,
        'numberOfBedsAbsoluteSale': value.numberOfBedsAbsoluteSale,
        'area': value.area,
        'bedType': value.bedType,
        'showerType': value.showerType,
        'prices': value.prices === undefined ? undefined : ((value.prices as Array<any>).map(PensionRoomListPriceOutDTOToJSON)),
        'price': value.price,
        'mainImage': value.mainImage,
    };
}

