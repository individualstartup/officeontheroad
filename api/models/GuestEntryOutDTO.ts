/* tslint:disable */
/* eslint-disable */
/**
 * IndividualStartup API documentation
 * fileContent
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GuestEntryOutDTO
 */
export interface GuestEntryOutDTO {
    /**
     * 
     * @type {boolean}
     * @memberof GuestEntryOutDTO
     */
    resident: boolean;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    category: GuestEntryOutDTOCategoryEnum;
    /**
     * 
     * @type {Date}
     * @memberof GuestEntryOutDTO
     */
    dateOfBirth?: Date;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    idType: GuestEntryOutDTOIdTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    idNumber: string;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    streetNr: string;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    zipCode: string;
    /**
     * 
     * @type {string}
     * @memberof GuestEntryOutDTO
     */
    countryCodeISO3: string;
}


/**
 * @export
 */
export const GuestEntryOutDTOCategoryEnum = {
    Adult: 'ADULT',
    Child: 'CHILD',
    Ztp: 'ZTP',
    Over60: 'OVER60',
    Work: 'WORK'
} as const;
export type GuestEntryOutDTOCategoryEnum = typeof GuestEntryOutDTOCategoryEnum[keyof typeof GuestEntryOutDTOCategoryEnum];

/**
 * @export
 */
export const GuestEntryOutDTOIdTypeEnum = {
    Op: 'OP',
    Pas: 'PAS',
    Pppu: 'PPPU',
    Kartaeu: 'KARTAEU',
    Ppp: 'PPP',
    Ppppc: 'PPPPC',
    Pptp: 'PPTP',
    Pzumo: 'PZUMO',
    Pzpdo: 'PZPDO'
} as const;
export type GuestEntryOutDTOIdTypeEnum = typeof GuestEntryOutDTOIdTypeEnum[keyof typeof GuestEntryOutDTOIdTypeEnum];


/**
 * Check if a given object implements the GuestEntryOutDTO interface.
 */
export function instanceOfGuestEntryOutDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "resident" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "firstName" in value;
    isInstance = isInstance && "lastName" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "idType" in value;
    isInstance = isInstance && "idNumber" in value;
    isInstance = isInstance && "streetNr" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "zipCode" in value;
    isInstance = isInstance && "countryCodeISO3" in value;

    return isInstance;
}

export function GuestEntryOutDTOFromJSON(json: any): GuestEntryOutDTO {
    return GuestEntryOutDTOFromJSONTyped(json, false);
}

export function GuestEntryOutDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestEntryOutDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resident': json['resident'],
        'title': json['title'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'category': json['category'],
        'dateOfBirth': !exists(json, 'dateOfBirth') ? undefined : (new Date(json['dateOfBirth'])),
        'idType': json['idType'],
        'idNumber': json['idNumber'],
        'streetNr': json['streetNr'],
        'city': json['city'],
        'zipCode': json['zipCode'],
        'countryCodeISO3': json['countryCodeISO3'],
    };
}

export function GuestEntryOutDTOToJSON(value?: GuestEntryOutDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resident': value.resident,
        'title': value.title,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'category': value.category,
        'dateOfBirth': value.dateOfBirth === undefined ? undefined : (value.dateOfBirth.toISOString().substr(0,10)),
        'idType': value.idType,
        'idNumber': value.idNumber,
        'streetNr': value.streetNr,
        'city': value.city,
        'zipCode': value.zipCode,
        'countryCodeISO3': value.countryCodeISO3,
    };
}

