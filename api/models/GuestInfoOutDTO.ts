/* tslint:disable */
/* eslint-disable */
/**
 * IndividualStartup API documentation
 * fileContent
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GuestEntryOutDTO } from './GuestEntryOutDTO';
import {
    GuestEntryOutDTOFromJSON,
    GuestEntryOutDTOFromJSONTyped,
    GuestEntryOutDTOToJSON,
} from './GuestEntryOutDTO';

/**
 * 
 * @export
 * @interface GuestInfoOutDTO
 */
export interface GuestInfoOutDTO {
    /**
     * 
     * @type {Date}
     * @memberof GuestInfoOutDTO
     */
    contractSince: Date;
    /**
     * 
     * @type {Date}
     * @memberof GuestInfoOutDTO
     */
    contractTill: Date;
    /**
     * 
     * @type {string}
     * @memberof GuestInfoOutDTO
     */
    resourceName: string;
    /**
     * 
     * @type {number}
     * @memberof GuestInfoOutDTO
     */
    totalGuests: number;
    /**
     * 
     * @type {Date}
     * @memberof GuestInfoOutDTO
     */
    guestEntryFinishedAt?: Date;
    /**
     * 
     * @type {Array<GuestEntryOutDTO>}
     * @memberof GuestInfoOutDTO
     */
    registeredGuests: Array<GuestEntryOutDTO>;
}

/**
 * Check if a given object implements the GuestInfoOutDTO interface.
 */
export function instanceOfGuestInfoOutDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "contractSince" in value;
    isInstance = isInstance && "contractTill" in value;
    isInstance = isInstance && "resourceName" in value;
    isInstance = isInstance && "totalGuests" in value;
    isInstance = isInstance && "registeredGuests" in value;

    return isInstance;
}

export function GuestInfoOutDTOFromJSON(json: any): GuestInfoOutDTO {
    return GuestInfoOutDTOFromJSONTyped(json, false);
}

export function GuestInfoOutDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestInfoOutDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contractSince': (new Date(json['contractSince'])),
        'contractTill': (new Date(json['contractTill'])),
        'resourceName': json['resourceName'],
        'totalGuests': json['totalGuests'],
        'guestEntryFinishedAt': !exists(json, 'guestEntryFinishedAt') ? undefined : (new Date(json['guestEntryFinishedAt'])),
        'registeredGuests': ((json['registeredGuests'] as Array<any>).map(GuestEntryOutDTOFromJSON)),
    };
}

export function GuestInfoOutDTOToJSON(value?: GuestInfoOutDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contractSince': (value.contractSince.toISOString().substr(0,10)),
        'contractTill': (value.contractTill.toISOString().substr(0,10)),
        'resourceName': value.resourceName,
        'totalGuests': value.totalGuests,
        'guestEntryFinishedAt': value.guestEntryFinishedAt === undefined ? undefined : (value.guestEntryFinishedAt.toISOString().substr(0,10)),
        'registeredGuests': ((value.registeredGuests as Array<any>).map(GuestEntryOutDTOToJSON)),
    };
}

