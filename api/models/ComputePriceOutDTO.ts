/* tslint:disable */
/* eslint-disable */
/**
 * IndividualStartup API documentation
 * fileContent
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PriceElementOutDTO } from './PriceElementOutDTO';
import {
    PriceElementOutDTOFromJSON,
    PriceElementOutDTOFromJSONTyped,
    PriceElementOutDTOToJSON,
} from './PriceElementOutDTO';

/**
 * 
 * @export
 * @interface ComputePriceOutDTO
 */
export interface ComputePriceOutDTO {
    /**
     * 
     * @type {number}
     * @memberof ComputePriceOutDTO
     */
    totalPrice: number;
    /**
     * 
     * @type {Date}
     * @memberof ComputePriceOutDTO
     */
    since: Date;
    /**
     * 
     * @type {Date}
     * @memberof ComputePriceOutDTO
     */
    till: Date;
    /**
     * 
     * @type {Array<PriceElementOutDTO>}
     * @memberof ComputePriceOutDTO
     */
    prices: Array<PriceElementOutDTO>;
    /**
     * 
     * @type {number}
     * @memberof ComputePriceOutDTO
     */
    serviceFee: number;
}

/**
 * Check if a given object implements the ComputePriceOutDTO interface.
 */
export function instanceOfComputePriceOutDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "totalPrice" in value;
    isInstance = isInstance && "since" in value;
    isInstance = isInstance && "till" in value;
    isInstance = isInstance && "prices" in value;
    isInstance = isInstance && "serviceFee" in value;

    return isInstance;
}

export function ComputePriceOutDTOFromJSON(json: any): ComputePriceOutDTO {
    return ComputePriceOutDTOFromJSONTyped(json, false);
}

export function ComputePriceOutDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComputePriceOutDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalPrice': json['totalPrice'],
        'since': (new Date(json['since'])),
        'till': (new Date(json['till'])),
        'prices': ((json['prices'] as Array<any>).map(PriceElementOutDTOFromJSON)),
        'serviceFee': json['serviceFee'],
    };
}

export function ComputePriceOutDTOToJSON(value?: ComputePriceOutDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalPrice': value.totalPrice,
        'since': (value.since.toISOString().substr(0,10)),
        'till': (value.till.toISOString().substr(0,10)),
        'prices': ((value.prices as Array<any>).map(PriceElementOutDTOToJSON)),
        'serviceFee': value.serviceFee,
    };
}

